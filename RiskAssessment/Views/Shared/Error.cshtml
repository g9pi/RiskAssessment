@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
    @if (Model.Code == 200)
    {
        ViewBag.Title = "200 Success";
    }
    else if (Model.Code == 400)
    {
        ViewBag.Title = "400 Bad request";
    }
    else if (Model.Code == 403)
    {
        ViewBag.Title = "403 Permission denied";
    }
    else if (Model.Code == 500)
    {
        ViewBag.Title = "500 Internal Error";
    }
    else
    {
        // Code 404
        ViewBag.Title = "404 Not found";
    }
}
@*<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>*@

@*@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}*@
<div id="preloader">
    <div class="loader"></div>
</div>
<!-- preloader area end -->
<!-- error area start -->
<div class="error-area ptb--100 text-center">
    <div class="container">
        <div class="error-content">
            <h2>@Model.Code </h2>
            <p>@ViewBag.Title!</p>
            <p>Exception Message : @Model.Message</p>
           @* <a href="@Url.Action(HomeController.ActionIndex,HomeController.Name)">Back to Previous page</a>*@
            <a href="javascript:history.back()">Back to Previous page</a>
        </div>
    </div>
</div>
@*<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>*@
