@{

    ViewData["Title"] = "Process Risk and Opportunity";
}
@model ProcessRiskViewModel
<div id="app">
    <div class="pt-3">
        <div class="row">
            <div class="col">
                <h3 class="pt-5 text-white">@ViewData["Title"] </h3>
            </div>
            <div class="col-auto ml-auto ">
                <div class="form-group  pt-5">
                   @* <label for="user_sec" class="col-form-label">Division</label>*@
                    <form>
                        <select class="custom-select" id="DivisionName" name="DivisionName" onchange="this.form.submit()">
                            @foreach (var option in Model.Division_ddl)
                            {
                                if (option.Selected)
                                {
                                    <option value="@option.Value" selected>@option.Text</option>
                                }
                                else
                                {
                                    <option value="@option.Value">@option.Text</option>
                                }
                            }
                        </select>
                    </form>
                </div>
            </div>          
        </div>       
    </div>
    @*<partial name="ProcessRiskSubMenu" />*@

    <div class="row pt-3">
        <div class="col-auto">
            <div class="card h-100">
                <div class="card-body ">
                    
                        <div class="nav flex-column nav-pills mb-3 mb-sm-0" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                        @foreach (var item in Model.Division.Sections)
                        {
                            <a class="nav-link pl-3 pr-3 text-center @(item.Selected ? "active": "")" id="@item.SectionId" href="@Url.Action(ProcessRiskController.ActionProcessRisk,ProcessRiskController.Name,new{DivisionName = Model.Division.DivisionName,SectionName= item.Sectionname})" role="tab" aria-controls="v-pills-profile" aria-selected="false">@item.Sectionname</a>
                        }

                        </div>
                  
                </div>
            </div>
        </div>
        <div class="col">
            <div class="row">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">

                            <div class="row">
                                <div class="col">
                                    <h4 class="pt-2">@Model.Division.Sections.Where(n =>n.Selected).FirstOrDefault().Sectionname</h4>
                                </div>
                                <div class="col-auto ml-auto">
                                    <button class="btn btn-light dropdown-toggle" type="button" data-toggle="dropdown">
                                        Revision 3 <span class="badge badge-success">Current</span>
                                    </button>
                                    <div class="dropdown-menu">
                                        <a class="dropdown-item" href="#">Revision 3 <span class="badge badge-success">Current</span></a>
                                        <a class="dropdown-item" href="#">Revision 2 <span class="badge badge-secondary">Obsolated</span></a>
                                        <a class="dropdown-item" href="#">Revision 1 <span class="badge badge-secondary">Obsolated</span></a>
                                        @*<div class="dropdown-divider"></div>
                                        <a class="dropdown-item" href="#"><i class="fa fa-plus-circle"></i> New Revision</a>*@
                                    </div>
                                </div>
                            </div>
                           
                            <hr />
                            <div class="list-group">
                                <a href="@Url.Action(ProcessRiskController.ActionProcessRiskDetail,ProcessRiskController.Name)" class="list-group-item list-group-item-action flex-column align-items-start mt-2" style="border-radius:10px">
                                    
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mt-1 mb-1 font-weight-bold">Assembly</h5>
                                        <small>Created by : Tanapat Tansara On 2023-02-08</small>
                                    </div>
                                    <hr />
                                    <div class="row ">
                                        <div class="col-8">
                                            <div class="table-responsive">
                                                <table class="table table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th>Process</th>
                                                            <th class="pl-1 pr-1 text-center">Total Risk</th>
                                                            <th class="pl-1 pr-1 text-center">Low Risk</th>
                                                            <th class="pl-1 pr-1 text-center">Moderate Risk</th>
                                                            <th class="pl-1 pr-1 text-center">High Risk</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td>Trimming</td>
                                                            <td align="right"><span class="badge badge-primary font-14">5</span></td>
                                                            <td align="right"><span class="badge badge-success font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-warning font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-danger font-14">1</span></td>
                                                        </tr>
                                                        <tr>
                                                            <td>Hole Punching & Cleaning</td>
                                                            <td align="right"><span class="badge badge-primary font-14">5</span></td>
                                                            <td align="right"><span class="badge badge-success font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-warning font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-danger font-14">1</span></td>
                                                        </tr>
                                                        <tr>
                                                            <td>Riveting</td>
                                                            <td align="right"><span class="badge badge-primary font-14">5</span></td>
                                                            <td align="right"><span class="badge badge-success font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-warning font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-danger font-14">1</span></td>
                                                        </tr>
                                                        <tr>
                                                            <th class="table-primary">Total</th>
                                                            <td align="right" class="table-primary"><span class="badge badge-primary font-14">15</span></td>
                                                            <td align="right" class="table-primary"><span class="badge badge-success font-14">6</span></td>
                                                            <td align="right" class="table-primary"><span class="badge badge-warning font-14">6</span></td>
                                                            <td align="right" class="table-primary"><span class="badge badge-danger font-14">3</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <ul class="timeline" id="timeline">

                                                <li class="li complete">
                                                    <div class="timestamp">
                                                        <span class="author">Teerawat Peeralerthiran</span>
                                                        <span class="date">2023-07-05</span>
                                                    </div>
                                                    <div class="status text-center">
                                                        <label class="mt-3">Accepted First Reviewed </label>
                                                    </div>
                                                </li>
                                                <li class="li complete">
                                                    <div class="timestamp">
                                                        <span class="author">Kwanjai Huadheng</span>
                                                        <span class="date">2023-07-05</span>
                                                    </div>
                                                    <div class="status text-center">
                                                        <label class="mt-3">Accepted Second Reviewed </label>
                                                    </div>
                                                </li>

                                            </ul>
                                        </div>
                                    </div>


                                    @*<small>Created by : Tanapat Tansara On 2023-02-08</small>
                                    <br />
                                    <small>Reviewed by : Teerawat Peeralerthiran On 2023-06-01</small>*@
                                </a>
                                <a href="@Url.Action(ProcessRiskController.ActionProcessRiskDetail,ProcessRiskController.Name)" class="list-group-item list-group-item-action flex-column align-items-start mt-2" style="border-radius:10px">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mt-1 mb-1 font-weight-bold">Issue PR </h5>
                                        <small>Created by : Tanapat Tansara On 2023-02-08</small>
                                    </div>
                                    <hr />
                                    <div class="row ">
                                        <div class="col-8">
                                            <div class="table-responsive">
                                                <table class="table table-bordered">
                                                    <thead>
                                                        <tr>
                                                            <th>Process</th>
                                                            <th class="pl-1 pr-1 text-center">Total Risk</th>
                                                            <th class="pl-1 pr-1 text-center">Low Risk</th>
                                                            <th class="pl-1 pr-1 text-center">Moderate Risk</th>
                                                            <th class="pl-1 pr-1 text-center">High Risk</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td>Issue PR</td>
                                                            <td align="right"><span class="badge badge-primary font-14">5</span></td>
                                                            <td align="right"><span class="badge badge-success font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-warning font-14">2</span></td>
                                                            <td align="right"><span class="badge badge-danger font-14">1</span></td>
                                                        </tr>

                                                        <tr>
                                                            <th class="table-primary">Total</th>
                                                            <td align="right" class="table-primary"><span class="badge badge-primary font-14">5</span></td>
                                                            <td align="right" class="table-primary"><span class="badge badge-success font-14">2</span></td>
                                                            <td align="right" class="table-primary"><span class="badge badge-warning font-14">2</span></td>
                                                            <td align="right" class="table-primary"><span class="badge badge-danger font-14">1</span></td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <ul class="timeline" id="timeline">

                                                <li class="li complete">
                                                    <div class="timestamp">
                                                        <span class="author">Teerawat Peeralerthiran</span>
                                                        <span class="date">2023-07-05</span>
                                                    </div>
                                                    <div class="status text-center">
                                                        <label class="mt-3">Accepted First Reviewed </label>
                                                    </div>
                                                </li>
                                                <li class="li complete">
                                                    <div class="timestamp">
                                                        <span class="author">Kwanjai Huadheng</span>
                                                        <span class="date">2023-07-05</span>
                                                    </div>
                                                    <div class="status text-center">
                                                        <label class="mt-3">Accepted Second Reviewed </label>
                                                    </div>
                                                </li>

                                            </ul>
                                        </div>
                                    </div>


                                    @*<small>Created by : Tanapat Tansara On 2023-02-08</small>
                                    <br />
                                    <small>Reviewed by : Teerawat Peeralerthiran On 2023-06-01</small>*@
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row pt-3">
                <div class="col-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <h5 class="header-title pt-2">Interaction between process/parties</h5>
                                </div>
                                <div class="col-auto">
                                    
                                </div>
                            </div>
                            
                            <hr />
                            <div class="list-group">
                                <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1"><i class="fa-solid fa-file-lines"></i> 2023 Interaction between process/parties </h5>
                                        <small>3 days ago</small>
                                    </div>
                                    <p class="mb-1">MIL-QP-G26-F8  (R0) CE -  Interaction between processes-parties (Update 08-02-2023).xlsx</p>
                                    <small>Created by : Tanapat Tansara On 2023-02-08</small>
                                    <br />
                                    <small>Reviewed by : Teerawat Peeralerthiran On 2023-06-01</small>
                                </a>
                                <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1"><i class="fa-solid fa-file-lines"></i> 2022 Interaction between process/parties </h5>
                                        <small class="text-muted">1 years ago</small>
                                    </div>
                                    <p class="mb-1">MIL-QP-G26-F8  (R0) CE -  Interaction between processes-parties (Update 01-03-2022).xlsx</p>
                                    <small>Created by : Tanapat Tansara On 2022-02-08</small>
                                    <br />
                                    <small>Reviewed by : Teerawat Peeralerthiran On 2022-06-01</small>
                                </a>
                                <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1"><i class="fa-solid fa-file-lines"></i> 2021 Interaction between process/parties </h5>
                                        <small class="text-muted">2 years ago</small>
                                    </div>
                                    <p class="mb-1">MIL-QP-G26-F8  (R0) CE -  Interaction between processes-parties (Update 08-01-2021).xlsx</p>
                                    <small>Created by : Tanapat Tansara On 2021-02-08</small>
                                    <br />
                                    <small>Reviewed by : Teerawat Peeralerthiran On 2021-06-01</small>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    

   
    
    @*<div class="row pt-3">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <a class="btn btn-primary btn-flat btn-lg mt-3" href="@Url.Action(ProcessRiskController.ActionCreateProcess,ProcessRiskController.Name)">
                        <i class="fa fa-plus-circle"></i> Process
                    </a>         
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5>Processes</h5>
                        </div>
                        <div class="col-auto ml-auto">
                            <a  class="btn btn-warning" href="@Url.Action(ProcessRiskController.ActionEditProcess,ProcessRiskController.Name,new{Id = 1})"><i class="fa fa-pencil"></i> Edit</a>
                        </div>
                    </div>
                    
                    <hr>
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active show" id="Tab1" data-toggle="tab" href="#" role="tab" aria-controls="Wastewater Treatment" aria-selected="true">Wastewater Treatment</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab2" data-toggle="tab" href="#" role="tab" aria-controls="Rainwater Refine" aria-selected="false">Rainwater Refine</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab3" data-toggle="tab" href="#" role="tab" aria-controls="Tap Water Supply" aria-selected="false">Tap Water Supply</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab4" data-toggle="tab" href="#" role="tab" aria-controls="EDS" aria-selected="false">EDS</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab5" data-toggle="tab" href="#" role="tab" aria-controls="Scrap Separation & Deforming" aria-selected="false">Scrap Separation & Deforming</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab6" data-toggle="tab" href="#" role="tab" aria-controls="Sell Scrap" aria-selected="false">Sell Scrap</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab7" data-toggle="tab" href="#" role="tab" aria-controls="Repair Pallet " aria-selected="false">Repair Pallet </a>
                        </li>
                        
                        
                    </ul>
                    <div class="row">
                        
                      
                    </div>
                </div>
            </div>
        </div>
       
    </div>*@
</div>
<style>
    .timeline {
        list-style-type: none;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .li {
        transition: all 200ms ease-in;
    }

    .author{
        white-space: nowrap
    }
    .timestamp {
        margin-bottom: 20px;
        padding: 0px 15px;
        display: flex;
        flex-direction: column;
        align-items: center;
        font-weight: 100;
    }

    .status {
        padding: 0px 15px;
        display: flex;
        justify-content: center;
        border-top: 2px solid #D6DCE0;
        position: relative;
        transition: all 200ms ease-in;
    }

        .status label {
            font-weight: 600;
        }

        .status:before {
            content: "";
            width: 25px;
            height: 25px;
            background-color: white;
            border-radius: 25px;
            border: 1px solid #ddd;
            position: absolute;
            top: -15px;
            left: 42%;
            transition: all 200ms ease-in;
        }

    .li.complete .status {
        border-top: 2px solid #66DC71;
    }

        .li.complete .status:before {
            background-color: #66DC71;
            border: none;
            transition: all 200ms ease-in;
        }

        .li.complete .status label {
            color: #66DC71;
        }

    .li.reject .status {
        border-top: 2px solid #dc6666;
    }

        .li.reject .status:before {
            background-color: #dc6666;
            border: none;
            transition: all 200ms ease-in;
        }

        .li.reject .status label {
            color: #dc6666;
        }

    @@media (min-device-width: 320px) and (max-device-width: 700px) {
        .timeline {
            list-style-type: none;
            display: block;
        }

        .li {
            transition: all 200ms ease-in;
            display: flex;
            width: inherit;
        }

        .timestamp {
            width: 100px;
        }

        .status:before {
            left: -8%;
            top: 30%;
            transition: all 200ms ease-in;
        }
    }

</style>
@section Scripts{
    <partial name="_Vue2" />
    <script>
        new Vue({
            el: '#app',
            components: {
                apexchart: VueApexCharts,
            },
            data: {
                processRisks: [
                    {
                        flowName: 'Assembly',
                        totalRisk: 14,
                        lowRisk: 2,
                        moderateRisk: 12,
                        highRisk: 0,
                        createdBy: 'Tanapat Tansara',
                        createdDate: '2023-06-30',
                        reviewed:{
                            firstReviewedBy:'Teerawat Peeralerthiran',
                            firstReviewedDate:'2023-07-05',
                            secondReviewedBy:'Kwanjai Huadheng',
                            secondReviewedDate: '2023-07-06',
                        }
                    },
                    {
                        flowName: 'Issue PR',
                        totalRisk: 14,
                        lowRisk: 2,
                        moderateRisk: 12,
                        highRisk: 0,
                        createdBy: 'Tanapat Tansara',
                        createdDate: '2023-07-10',
                        reviewed: {
                            firstReviewedBy: 'Teerawat Peeralerthiran',
                            firstReviewedDate: '2023-07-05',
                            secondReviewedBy: 'Kwanjai Huadheng',
                            secondReviewedDate: '2023-07-05',
                        }
                    },

                ]
                  


            },

        })

    </script>


    <script id="code">
        function init() {
            if (window.goSamples) goSamples();  // init for these samples -- you don't need to call this

            // Since 2.2 you can also author concise templates with method chaining instead of GraphObject.make
            // For details, see https://gojs.net/latest/intro/buildingObjects.html
            const $ = go.GraphObject.make;  // for conciseness in defining templates

            myDiagram =
                new go.Diagram("myDiagramDiv",  // must name or refer to the DIV HTML element
                    {

                        "LinkDrawn": showLinkLabel,  // this DiagramEvent listener is defined below
                        "LinkRelinked": showLinkLabel,
                        "undoManager.isEnabled": true  // enable undo & redo
                    });

            // when the document is modified, add a "*" to the title and enable the "Save" button
            myDiagram.addDiagramListener("Modified", e => {
                var button = document.getElementById("SaveButton");
                if (button) button.disabled = !myDiagram.isModified;
                var idx = document.title.indexOf("*");
                if (myDiagram.isModified) {
                    if (idx < 0) document.title += "*";
                } else {
                    if (idx >= 0) document.title = document.title.slice(0, idx);
                }
            });

            // helper definitions for node templates

            function nodeStyle() {
                return [
                    // The Node.location comes from the "loc" property of the node data,
                    // converted by the Point.parse static method.
                    // If the Node.location is changed, it updates the "loc" property of the node data,
                    // converting back using the Point.stringify static method.
                    new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
                    {
                        // the Node.location is at the center of each node
                        locationSpot: go.Spot.Center
                    }
                ];
            }

            // Define a function for creating a "port" that is normally transparent.
            // The "name" is used as the GraphObject.portId,
            // the "align" is used to determine where to position the port relative to the body of the node,
            // the "spot" is used to control how links connect with the port and whether the port
            // stretches along the side of the node,
            // and the boolean "output" and "input" arguments control whether the user can draw links from or to the port.
            function makePort(name, align, spot, output, input) {
                var horizontal = align.equals(go.Spot.Top) || align.equals(go.Spot.Bottom);
                // the port is basically just a transparent rectangle that stretches along the side of the node,
                // and becomes colored when the mouse passes over it
                return $(go.Shape,
                    {
                        fill: "transparent",  // changed to a color in the mouseEnter event handler
                        strokeWidth: 0,  // no stroke
                        width: horizontal ? NaN : 8,  // if not stretching horizontally, just 8 wide
                        height: !horizontal ? NaN : 8,  // if not stretching vertically, just 8 tall
                        alignment: align,  // align the port on the main Shape
                        stretch: (horizontal ? go.GraphObject.Horizontal : go.GraphObject.Vertical),
                        portId: name,  // declare this object to be a "port"
                        fromSpot: spot,  // declare where links may connect at this port
                        fromLinkable: output,  // declare whether the user may draw links from here
                        toSpot: spot,  // declare where links may connect at this port
                        toLinkable: input,  // declare whether the user may draw links to here
                        cursor: "pointer",  // show a different cursor to indicate potential link point
                        mouseEnter: (e, port) => {  // the PORT argument will be this Shape
                            if (!e.diagram.isReadOnly) port.fill = "rgba(255,255,255,0.5)";
                        },
                        mouseLeave: (e, port) => port.fill = "transparent"
                    });
            }

            function textStyle() {
                return {
                    font: "bold 11pt Nunito, Kanit, Sarabun, sans-serif",

                    stroke: "#F8F8F8"
                }
            }

            // define the Node templates for regular nodes

            myDiagram.nodeTemplateMap.add("",  // the default category
                $(go.Node, "Table", nodeStyle(),
                    // the main object is a Panel that surrounds a TextBlock with a rectangular Shape
                    $(go.Panel, "Auto",
                        $(go.Shape, "Rectangle",
                            { fill: "#282c34", stroke: "#00A9C9", strokeWidth: 1.5 },
                            new go.Binding("figure", "figure")),
                        $(go.TextBlock, textStyle(),
                            {
                                margin: 8,
                                maxSize: new go.Size(160, NaN),
                                wrap: go.TextBlock.WrapFit,
                                editable: true
                            },
                            new go.Binding("text").makeTwoWay())
                    ),
                    // four named ports, one on each side:
                    makePort("T", go.Spot.Top, go.Spot.TopSide, false, true),
                    makePort("L", go.Spot.Left, go.Spot.LeftSide, true, true),
                    makePort("R", go.Spot.Right, go.Spot.RightSide, true, true),
                    makePort("B", go.Spot.Bottom, go.Spot.BottomSide, true, false)
                ));

            myDiagram.nodeTemplateMap.add("Conditional",
                $(go.Node, "Table", nodeStyle(),
                    // the main object is a Panel that surrounds a TextBlock with a rectangular Shape
                    $(go.Panel, "Auto",
                        $(go.Shape, "Diamond",
                            { fill: "#282c34", stroke: "#00A9C9", strokeWidth: 3 },
                            new go.Binding("figure", "figure")),
                        $(go.TextBlock, textStyle(),
                            {
                                margin: 8,
                                maxSize: new go.Size(160, NaN),
                                wrap: go.TextBlock.WrapFit,
                                editable: true
                            },
                            new go.Binding("text").makeTwoWay())
                    ),
                    // four named ports, one on each side:
                    makePort("T", go.Spot.Top, go.Spot.Top, false, true),
                    makePort("L", go.Spot.Left, go.Spot.Left, true, true),
                    makePort("R", go.Spot.Right, go.Spot.Right, true, true),
                    makePort("B", go.Spot.Bottom, go.Spot.Bottom, true, false)
                ));

            myDiagram.nodeTemplateMap.add("Start",
                $(go.Node, "Table", nodeStyle(),
                    $(go.Panel, "Spot",
                        $(go.Shape, "Circle",
                            { desiredSize: new go.Size(70, 70), fill: "#282c34", stroke: "#09d3ac", strokeWidth: 3.5 }),
                        $(go.TextBlock, "Start", textStyle(),
                            new go.Binding("text"))
                    ),
                    // three named ports, one on each side except the top, all output only:
                    makePort("L", go.Spot.Left, go.Spot.Left, true, false),
                    makePort("R", go.Spot.Right, go.Spot.Right, true, false),
                    makePort("B", go.Spot.Bottom, go.Spot.Bottom, true, false)
                ));

            myDiagram.nodeTemplateMap.add("End",
                $(go.Node, "Table", nodeStyle(),
                    $(go.Panel, "Spot",
                        $(go.Shape, "Circle",
                            { desiredSize: new go.Size(60, 60), fill: "#282c34", stroke: "#DC3C00", strokeWidth: 3.5 }),
                        $(go.TextBlock, "End", textStyle(),
                            new go.Binding("text"))
                    ),
                    // three named ports, one on each side except the bottom, all input only:
                    makePort("T", go.Spot.Top, go.Spot.Top, false, true),
                    makePort("L", go.Spot.Left, go.Spot.Left, false, true),
                    makePort("R", go.Spot.Right, go.Spot.Right, false, true)
                ));

            // taken from https://unpkg.com/gojs@2.3.8/extensions/Figures.js:
            go.Shape.defineFigureGenerator("File", (shape, w, h) => {
                var geo = new go.Geometry();
                var fig = new go.PathFigure(0, 0, true); // starting point
                geo.add(fig);
                fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));
                fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));
                fig.add(new go.PathSegment(go.PathSegment.Line, w, h));
                fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());
                var fig2 = new go.PathFigure(.75 * w, 0, false);
                geo.add(fig2);
                // The Fold
                fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));
                fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));
                geo.spot1 = new go.Spot(0, .25);
                geo.spot2 = go.Spot.BottomRight;
                return geo;
            });

            myDiagram.nodeTemplateMap.add("Comment",
                $(go.Node, "Auto", nodeStyle(),
                    $(go.Shape, "File",
                        { fill: "#282c34", stroke: "#DEE0A3", strokeWidth: 3 }),
                    $(go.TextBlock, textStyle(),
                        {
                            margin: 8,
                            maxSize: new go.Size(200, NaN),
                            wrap: go.TextBlock.WrapFit,
                            textAlign: "center",
                            editable: true
                        },
                        new go.Binding("text").makeTwoWay())
                    // no ports, because no links are allowed to connect with a comment
                ));


            // replace the default Link template in the linkTemplateMap
            myDiagram.linkTemplate =
                $(go.Link,  // the whole link panel
                    {
                        routing: go.Link.AvoidsNodes,
                        curve: go.Link.JumpOver,
                        corner: 5, toShortLength: 4,
                        relinkableFrom: true,
                        relinkableTo: true,
                        reshapable: true,
                        resegmentable: true,
                        // mouse-overs subtly highlight links:
                        mouseEnter: (e, link) => link.findObject("HIGHLIGHT").stroke = "rgba(30,144,255,0.2)",
                        mouseLeave: (e, link) => link.findObject("HIGHLIGHT").stroke = "transparent",
                        selectionAdorned: false
                    },
                    new go.Binding("points").makeTwoWay(),
                    $(go.Shape,  // the highlight shape, normally transparent
                        { isPanelMain: true, strokeWidth: 8, stroke: "transparent", name: "HIGHLIGHT" }),
                    $(go.Shape,  // the link path shape
                        { isPanelMain: true, stroke: "gray", strokeWidth: 2 },
                        new go.Binding("stroke", "isSelected", sel => sel ? "dodgerblue" : "gray").ofObject()),
                    $(go.Shape,  // the arrowhead
                        { toArrow: "standard", strokeWidth: 0, fill: "gray" }),
                    $(go.Panel, "Auto",  // the link label, normally not visible
                        { visible: false, name: "LABEL", segmentIndex: 2, segmentFraction: 0.5 },
                        new go.Binding("visible", "visible").makeTwoWay(),
                        $(go.Shape, "RoundedRectangle",  // the label shape
                            { fill: "#F8F8F8", strokeWidth: 0 }),
                        $(go.TextBlock, "Yes",  // the label
                            {
                                textAlign: "center",
                                font: "10pt helvetica, arial, sans-serif",
                                stroke: "#333333",
                                editable: true
                            },
                            new go.Binding("text").makeTwoWay())
                    )
                );

            // Make link labels visible if coming out of a "conditional" node.
            // This listener is called by the "LinkDrawn" and "LinkRelinked" DiagramEvents.
            function showLinkLabel(e) {
                var label = e.subject.findObject("LABEL");
                if (label !== null) label.visible = (e.subject.fromNode.data.category === "Conditional");
            }

            // temporary links used by LinkingTool and RelinkingTool are also orthogonal:
            myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;
            myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;

            myDiagram.isEnabled = false; //disable edit diagram
            load();  // load an initial diagram from some JSON text

           



            // This is a re-implementation of the default animation, except it fades in from downwards, instead of upwards.
            function animateFadeDown(e) {
                var diagram = e.diagram;
                var animation = new go.Animation();
                animation.isViewportUnconstrained = true; // So Diagram positioning rules let the animation start off-screen
                animation.easing = go.Animation.EaseOutExpo;
                animation.duration = 900;
                // Fade "down", in other words, fade in from above
                animation.add(diagram, 'position', diagram.position.copy().offset(0, 200), diagram.position);
                animation.add(diagram, 'opacity', 0, 1);
                animation.start();
            }

        } // end init


        // Show the diagram's model in JSON format that the user may edit
        //function save() {
        //    document.getElementById("mySavedModel").value = myDiagram.model.toJson();
        //    myDiagram.isModified = false;
        //}
        var data = {
            "class": "go.GraphLinksModel",
            "linkFromPortIdProperty": "fromPort",
            "linkToPortIdProperty": "toPort",
            "nodeDataArray": [
                { "text": "Chemical Treatment", "key": -2, "loc": "-5.249534606933594 152.875" },
                { "text": "Wastewater", "key": -3, "loc": "-5 52.625" },
                { "text": "Chemical Treatment", "key": -4, "loc": "-5 238.625" },
                { "text": "IEAT\n(control Ruality)", "key": -5, "loc": "-222 153.625" },
                { "text": "Supplier\n(Chemical)", "key": -6, "loc": "175 152.625" }
            ],
            "linkDataArray": [
                { "from": -3, "to": -2, "fromPort": "B", "toPort": "T", "points": [-5, 69.64616470336915, -5, 79.64616470336915, -5, 102.75, -5.249534606933594, 102.75, -5.249534606933594, 125.85383529663085, -5.249534606933594, 135.85383529663085] },
                { "from": -2, "to": -4, "fromPort": "B", "toPort": "T", "points": [-5.249534606933594, 169.89616470336912, -5.249534606933594, 179.89616470336912, -5.249534606933594, 195.75, -5, 195.75, -5, 211.60383529663085, -5, 221.60383529663085] },
                { "from": -6, "to": -2, "fromPort": "L", "toPort": "R", "points": [129.25552368164062, 152.625, 119.25552368164062, 152.625, 100.58340454101562, 152.625, 100.58340454101562, 152.875, 81.91128540039062, 152.875, 71.91128540039062, 152.875] },
                { "from": -5, "to": -2, "fromPort": "R", "toPort": "L", "points": [-157.78396606445312, 153.625, -147.78396606445312, 153.625, -120.09716033935547, 153.625, -120.09716033935547, 152.875, -92.41035461425781, 152.875, -82.41035461425781, 152.875] }
            ]

        }
        function load() {
            myDiagram.model = go.Model.fromJson(data);
        }

       
        window.addEventListener('DOMContentLoaded', init);
    </script>
}