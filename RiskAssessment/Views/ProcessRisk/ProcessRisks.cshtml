@{

    ViewData["Title"] = "Process Risk and Opportunity";
}
<div id="app">
    <div class="pt-3">
        <h3 class="pt-5 text-white">@ViewData["Title"] : P7EV</h3>
    </div>
    <div class="row pt-2">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <label for="user_sec" class="col-form-label">Division</label>

                                <select class="custom-select">
                                    <option Value="General Production">General Production</option>
                                    @* @foreach (var item in Model.Division_ddl)
                                    {
                                    <option value="@item.Value">@item.Text</option>
                                    }*@
                                </select>

                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group">
                                <label for="user_sec" class="col-form-label">Section</label>

                                <select class="custom-select">
                                    <option Value="P7EV">P7EV</option>
                                    @* @foreach (var item in Model.Division_ddl)
                                    {
                                    <option value="@item.Value">@item.Text</option>
                                    }*@
                                </select>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <partial name="ProcessRiskSubMenu"  />
    <div class="row pt-2">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <a class="btn btn-primary btn-flat btn-lg mt-3" href="@Url.Action(ProcessRiskController.ActionCreateProcess,ProcessRiskController.Name)">
                        <i class="fa fa-plus-circle"></i> Process
                    </a>         
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5>Processes</h5>
                        </div>
                        <div class="col-auto ml-auto">
                            <a  class="btn btn-warning" href="@Url.Action(ProcessRiskController.ActionEditProcess,ProcessRiskController.Name,new{Id = 1})"><i class="fa fa-pencil"></i> Edit</a>
                        </div>
                    </div>
                    
                    <hr>
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active show" id="Tab1" data-toggle="tab" href="#" role="tab" aria-controls="Wastewater Treatment" aria-selected="true">Wastewater Treatment</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab2" data-toggle="tab" href="#" role="tab" aria-controls="Rainwater Refine" aria-selected="false">Rainwater Refine</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab3" data-toggle="tab" href="#" role="tab" aria-controls="Tap Water Supply" aria-selected="false">Tap Water Supply</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab4" data-toggle="tab" href="#" role="tab" aria-controls="EDS" aria-selected="false">EDS</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab5" data-toggle="tab" href="#" role="tab" aria-controls="Scrap Separation & Deforming" aria-selected="false">Scrap Separation & Deforming</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab6" data-toggle="tab" href="#" role="tab" aria-controls="Sell Scrap" aria-selected="false">Sell Scrap</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="Tab7" data-toggle="tab" href="#" role="tab" aria-controls="Repair Pallet " aria-selected="false">Repair Pallet </a>
                        </li>
                        
                        
                    </ul>
                    <div class="row">
                        <div class="col-12">
                            <div class="card card-bordered">
                                <div class="card-img-top img-fluid " >
                                    <div class="text-center" style="resize: both;overflow: auto;background-color:darkgray">
                                        <img src="@Url.Action(StorageController.ActionGetImage, StorageController.Name, new { name = "Sample Flow.jpg" })" alt="image" style="width:70%">
                                    </div>
                                    <div id="sample">
                                        <div style="width: 100%; display: flex; justify-content: space-between">
                                            
                                            @*<div id="myDiagramDiv" style="flex-grow: 1; height: 750px; background-color: rgb(40, 44, 52); position: relative; -webkit-tap-highlight-color: rgba(255, 255, 255, 0); cursor: auto;"><canvas tabindex="0" width="954" height="750" style="position: absolute; top: 0px; left: 0px; z-index: 2; user-select: none; touch-action: none; width: 954px; height: 750px; cursor: auto;">This text is displayed if your browser does not support the Canvas HTML element.</canvas><div style="position: absolute; overflow: auto; width: 954px; height: 750px; z-index: 1;"><div style="position: absolute; width: 1px; height: 1px;"></div></div></div>*@
                                            <div id="myDiagramDiv" style="border: 1px solid black; width: 100%; height: 600px; position: relative; -webkit-tap-highlight-color: rgba(255, 255, 255, 0);"><canvas tabindex="0" width="1054" height="598" style="position: absolute; top: 0px; left: 0px; z-index: 2; user-select: none; touch-action: none; width: 1054px; height: 598px;">This text is displayed if your browser does not support the Canvas HTML element.</canvas><div style="position: absolute; overflow: auto; width: 1054px; height: 598px; z-index: 1;"><div style="position: absolute; width: 1px; height: 1px;"></div></div></div>
                                        </div>
                                    </div>
                                    
                                    @*<div  style="resize: both;overflow: auto;background-color:darkgray">
                                       
                                    </div>*@
                                    
                                </div>
                             
                                <div class="card-body" style="background-color: cadetblue;">
                                    <div class="row">
                                        <div class="col">
                                            <h5 class="title">Process Flow and Interaction.</h5>
                                            <p class="card-text text-white">
                                                Reference from : MIL-QP-G26-F3  R0  Processes flow and Interaction
                                            </p>
                                        </div>
                                        <div class="col-auto ml-auto text-right ">
                                            <p class="text-white">Created by : <label class="text-warning">Teerawat P.</label> / Created date : <label class="text-warning">2023-03-08</label></p>
                                            <p class="text-white">Lasted modify by : <label class="text-warning">Agsornsak  C.</label>  / Lasted modify date : <label class="text-warning">2023-03-08</label></p>
                                        </div>
                                    </div>
                                    
                                   
                                </div>
                            </div>
                        </div>
                        <div class="col-12 mt-3">
                            <div class="card card-bordered">

                                <div class="card-img-top img-fluid pl-3 pr-3">
                                    <div class="row align-items-end">
                                        <div class="col">
                                            <ul class="list-group">
                                                <li class="list-group-item active"><h5>Machine/Equipment</h5></li>
                                                <li class="list-group-item">ระบบบำบัดน้ำเสีย/ ปั๊มน้ำ/ ตัวกวน/ ปั๊มสารเคมี</li>
                                                <li class="list-group-item">บ่อพักน้ำเสีย</li>
                                                <li class="list-group-item">เครื่องอัดตะกอน/ เครื่องทำลมอัด</li>
                                                <li class="list-group-item">Probe วัด pH </li>
                                                <li class="list-group-item">pH มิเตอร์, กระดาษ pH</li>
                                            </ul>
                                        </div>
                                        <div class="col">
                                            <div class="row">
                                                <div class="col">
                                                    <h1 class="text-primary">
                                                        <i class="fa-solid fa-arrow-turn-down fa-2x"></i>
                                                    </h1>
                                                    
                                                </div>
                                                <div class="col text-right">
                                                    <h1 class="text-primary">
                                                        <i class="fa-solid fa-arrow-turn-up  fa-rotate-180  fa-2x"></i>
                                                    </h1>                             
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <ul class="list-group">
                                                <li class="list-group-item active"><h5>Man</h5></li>
                                                <li class="list-group-item">ผู้ปฏิบัติงานประจำระบบบำบัดน้ำเสีย</li>
                                                
                                            </ul>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row align-items-center">
                                        <div class="col">
                                            <ul class="list-group">
                                                <li class="list-group-item active"><h5>Input</h5></li>
                                                <li class="list-group-item">น้ำเสียจากการผลิตและ ระบบ Facility</li>
                                                <li class="list-group-item">ไฟฟ้า</li>
                                                <li class="list-group-item">สารเคมี</li>
                                                <li class="list-group-item">ลมอัด</li>
                                            </ul>
                                        </div>
                                        <div class="col ">
                                            <div class="row align-items-center">
                                                <div class="col-auto  ">
                                                    
                                                    <h1 class="text-primary">
                                                        <i class="fa-solid fa-arrow-right fa-beat fa-xl"></i>
                                                    </h1>
                                                </div>
                                                <div class="col text-center p-0">
                                                    <div class="alert alert-primary p-3" role="alert">
                                                        <h4>Process name</h4>
                                                        <br />
                                                        <h5 class="card-subtitle">Wastewater Treatment</h5>
                                                   </div>                                                  
                                                </div>
                                                <div class="col-auto ">
                                                    <h1 class="text-primary">
                                                        <i class="fa-solid fa-arrow-right fa-beat fa-xl"></i>
                                                    </h1>
                                                </div>
                                            </div>                                           
                                        </div>
                                        <div class="col">
                                            <ul class="list-group">
                                                <li class="list-group-item active"><h5>Output</h5></li>
                                                <li class="list-group-item">MIL-NI-G08 วิธีการควบคุมระบบน้ำเสียและน้ำฝน</li>                                               
                                            </ul>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row align-items-start">
                                        <div class="col">
                                            <ul class="list-group">
                                                <li class="list-group-item active"><h5>Method</h5></li>
                                                <li class="list-group-item">MIL-NI-G08 วิธีการควบคุมระบบน้ำเสียและน้ำฝน</li>                                                
                                            </ul>
                                        </div>
                                        <div class="col">
                                            <div class="row">
                                                <div class="col">
                                                    <h1 class="text-primary">
                                                        <i class="fa-solid fa-arrow-turn-up fa-2x"></i>
                                                    </h1>
                                                </div>
                                                <div class="col text-right">
                                                    <h1 class="text-primary">
                                                        <i class="fa-solid fa-arrow-turn-down  fa-rotate-180  fa-2x"></i>
                                                    </h1>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col">
                                            <ul class="list-group">
                                                <li class="list-group-item active"><h5>Control/Measurement</h5></li>
                                                <li class="list-group-item">PI - บำบัดน้ำเสียได้ทันกับปริมาณที่เกิดขึ้น</li>
                                                <li class="list-group-item">PI - คุณภาพน้ำทิ้งผ่านมาตรฐาน</li>
                                                <li class="list-group-item">PI - ใช้สารเคมีอย่างคุ้มค่า</li>
                                                <li class="list-group-item">C - น้ำเสีย ตะกอนน้ำเสีย สารเคมีไม่หกรั่วไหล หรือปนเปื้อนสิ่งแวดล้อม</li>
                                                <li class="list-group-item">C - ใช้อุปกรณ์ ปั๊มน้ำ ปั๊มสารสารเคมีคุ้มค่า</li>
                                                
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body" style="background-color: cadetblue;">
                                    <div class="row">
                                        <div class="col">
                                            <h5 class="title">Process Identification.</h5>
                                            <p class="card-text text-white">
                                                Reference from : MIL-QP-G26-F4  R0  Process Identification
                                            </p>
                                        </div>
                                        <div class="col-auto ml-auto text-right ">
                                            <p class="text-white">Created by : <label class="text-warning">Teerawat P.</label> / Created date : <label class="text-warning">2023-03-08</label></p>
                                            <p class="text-white">Lasted modify by : <label class="text-warning">Agsornsak  C.</label>  / Lasted modify date : <label class="text-warning">2023-03-08</label></p>
                                        </div>
                                    </div>
                                   
                                    @*<a href="#" class="btn btn-warning"><i class="fa fa-pencil"></i> Edit</a>*@
                                </div>
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12">
           
            <div class="card mt-3">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <h5>Process Risk and Opportunity Assessment</h5>
                        </div>
                        <div class="col-auto ml-auto">
                            <a class="btn btn-primary" href="@Url.Action(ProcessRiskController.ActionCreateRisk,ProcessRiskController.Name)"><i class="fa fa-plus-circle"></i> New Risk or Opportunity</a>
                        </div>
                    </div>
                    
                    <hr />
                    <div class="table-responsive">
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr style="height:50px !important">
                                    <th rowspan="2" class="p-1"></th>
                                    <th rowspan="2" class="align-middle text-center pl-1 pr-1">
                                        รายการ<br />
                                        Items
                                    </th>
                                    <th rowspan="2" class="align-middle text-center">
                                        ประเด็นความเสี่ยง หรือโอกาส<br />
                                        Risk or Opportunity
                                    </th>
                                    <th rowspan="2" style="writing-mode: vertical-lr;transform: rotate(180deg); width:20px !important">
                                        Risk/Opportunity
                                    </th>
                                    <th rowspan="2" class="align-middle text-center">ผลกระทบ <br /> Impact </th>
                                    <th rowspan="2" style="writing-mode: vertical-lr;transform: rotate(180deg); width:20px !important">D (ทางตรง) & I (ทางอ้อม)</th>
                                    <th colspan="2" class="text-center">ผู้รับผลกระทบ</th>
                                    <th colspan="3" class="text-center">การประเมิน</th>
                                    <th rowspan="2" style="writing-mode: vertical-lr;transform: rotate(180deg); width:20px !important" class="pl-1 pr-1">
                                        Level (H/M/L)
                                        <svg width="20" height="20">
                                            <rect width="20" height="20" style="fill:#FF99CC;stroke-width:3;stroke:rgb(0,0,0)" />
                                        </svg>
                                    </th>
                                    <th rowspan="2" class="align-middle text-center">ดำเนินการ?</th>
                                    <th rowspan="2" class="align-middle text-center">หมายเหตุ <br />Remark</th>
                                    
                                </tr>
                                <tr style="height:50px !important">
                                    <th class="align-middle text-center">ภายใน <br /> Internal</th>
                                    <th class="align-middle text-center">ภายนอก <br /> External</th>
                                    <th style="writing-mode: vertical-lr;transform: rotate(180deg); width:20px !important" class="pl-1 pr-1">
                                        Impact (I)
                                        <svg width="20" height="20">
                                            <rect width="20" height="20" style="fill:#FFFF00;stroke-width:3;stroke:rgb(0,0,0)" />
                                        </svg>
                                    </th>
                                    <th style="writing-mode: vertical-lr;transform: rotate(180deg); width:20px !important" class="pl-1 pr-1">Likelihood (L)
                                        <svg width="20" height="20">
                                            <rect width="20" height="20" style="fill:#00FF00;stroke-width:3;stroke:rgb(0,0,0)" />
                                        </svg>
                                        
                                    </th>
                                    <th style="writing-mode: vertical-lr;transform: rotate(180deg); width:20px !important" class="pl-1 pr-1">RPN (IxL)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="p-1 text-center"><button class="btn btn-warning btn-xs"><i class="fa fa-pencil"></i></button></td>
                                    <td class="pl-1 pr-1 text-center">C</td>
                                    <td>คุณภาพน้ำเสียไม่ผ่านมาตรฐาน / ต้องเสียค่าปรับ</td>
                                    <td class="text-center">R</td>
                                    <td>ค่าใช้จ่าย</td>
                                    <td class="text-center">D</td>
                                    <td>MIL</td>
                                    <td></td>
                                    <td class="text-center">3</td>
                                    <td class="text-center">1</td>
                                    <td class="text-center">3</td>
                                    <td class="text-center">L</td>
                                    <td class="text-center">No</td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td class="p-1 text-center"><button class="btn btn-warning btn-xs"><i class="fa fa-pencil"></i></button></td>
                                    <td class="pl-1 pr-1 text-center">M</td>
                                    <td>พนักงานติดโควิด / ขาดแคลน Man power</td>
                                    <td class="text-center">R</td>
                                    <td>
                                        ภาพรวม น้ำปนเปื้อน
                                    </td>
                                    <td class="text-center">D</td>
                                    <td>MIL</td>
                                    <td></td>
                                    <td class="text-center">5</td>
                                    <td class="text-center">1</td>
                                    <td class="text-center">5</td>
                                    <td class="text-center">L</td>
                                    <td class="text-center"><a href="#">Yes</a></td>
                                    <td>ปฏิบัติตามข้อปฏิบัติการป้องกัน Covid -19 ของ MIL</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="card-footer">
                    <div class="row">
                        <div class="col">
                            <h5 class="title">Process Risk and Opportunity Assessment.</h5>
                            <p class="card-text ">
                                Reference from : MIL-QP-G26-F5  R1  Process Risk and Opportunity Assessment
                            </p>
                        </div>
                       @* <div class="col-auto ml-auto text-right ">
                            <p>Created by : <label class="text-primary">Teerawat P.</label> / Created date : <label class="text-primary">2023-03-08</label></p>
                            <p>Reviewed by : <label class="text-primary">Agsornsak  C. & Kwanjai H.</label>  / Reviewed date : <label class="text-primary">2023-03-08</label></p>
                        </div>*@
                    </div>
                    
                   
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script id="code">
        function init() {
            if (window.goSamples) goSamples();  // init for these samples -- you don't need to call this

            // Since 2.2 you can also author concise templates with method chaining instead of GraphObject.make
            // For details, see https://gojs.net/latest/intro/buildingObjects.html
            const $ = go.GraphObject.make;  // for conciseness in defining templates

            myDiagram =
                new go.Diagram("myDiagramDiv",  // must name or refer to the DIV HTML element
                    {

                        "LinkDrawn": showLinkLabel,  // this DiagramEvent listener is defined below
                        "LinkRelinked": showLinkLabel,
                        "undoManager.isEnabled": true  // enable undo & redo
                    });

            // when the document is modified, add a "*" to the title and enable the "Save" button
            myDiagram.addDiagramListener("Modified", e => {
                var button = document.getElementById("SaveButton");
                if (button) button.disabled = !myDiagram.isModified;
                var idx = document.title.indexOf("*");
                if (myDiagram.isModified) {
                    if (idx < 0) document.title += "*";
                } else {
                    if (idx >= 0) document.title = document.title.slice(0, idx);
                }
            });

            // helper definitions for node templates

            function nodeStyle() {
                return [
                    // The Node.location comes from the "loc" property of the node data,
                    // converted by the Point.parse static method.
                    // If the Node.location is changed, it updates the "loc" property of the node data,
                    // converting back using the Point.stringify static method.
                    new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
                    {
                        // the Node.location is at the center of each node
                        locationSpot: go.Spot.Center
                    }
                ];
            }

            // Define a function for creating a "port" that is normally transparent.
            // The "name" is used as the GraphObject.portId,
            // the "align" is used to determine where to position the port relative to the body of the node,
            // the "spot" is used to control how links connect with the port and whether the port
            // stretches along the side of the node,
            // and the boolean "output" and "input" arguments control whether the user can draw links from or to the port.
            function makePort(name, align, spot, output, input) {
                var horizontal = align.equals(go.Spot.Top) || align.equals(go.Spot.Bottom);
                // the port is basically just a transparent rectangle that stretches along the side of the node,
                // and becomes colored when the mouse passes over it
                return $(go.Shape,
                    {
                        fill: "transparent",  // changed to a color in the mouseEnter event handler
                        strokeWidth: 0,  // no stroke
                        width: horizontal ? NaN : 8,  // if not stretching horizontally, just 8 wide
                        height: !horizontal ? NaN : 8,  // if not stretching vertically, just 8 tall
                        alignment: align,  // align the port on the main Shape
                        stretch: (horizontal ? go.GraphObject.Horizontal : go.GraphObject.Vertical),
                        portId: name,  // declare this object to be a "port"
                        fromSpot: spot,  // declare where links may connect at this port
                        fromLinkable: output,  // declare whether the user may draw links from here
                        toSpot: spot,  // declare where links may connect at this port
                        toLinkable: input,  // declare whether the user may draw links to here
                        cursor: "pointer",  // show a different cursor to indicate potential link point
                        mouseEnter: (e, port) => {  // the PORT argument will be this Shape
                            if (!e.diagram.isReadOnly) port.fill = "rgba(255,255,255,0.5)";
                        },
                        mouseLeave: (e, port) => port.fill = "transparent"
                    });
            }

            function textStyle() {
                return {
                    font: "bold 11pt Nunito, Kanit, Sarabun, sans-serif",

                    stroke: "#F8F8F8"
                }
            }

            // define the Node templates for regular nodes

            myDiagram.nodeTemplateMap.add("",  // the default category
                $(go.Node, "Table", nodeStyle(),
                    // the main object is a Panel that surrounds a TextBlock with a rectangular Shape
                    $(go.Panel, "Auto",
                        $(go.Shape, "Rectangle",
                            { fill: "#282c34", stroke: "#00A9C9", strokeWidth: 1.5 },
                            new go.Binding("figure", "figure")),
                        $(go.TextBlock, textStyle(),
                            {
                                margin: 8,
                                maxSize: new go.Size(160, NaN),
                                wrap: go.TextBlock.WrapFit,
                                editable: true
                            },
                            new go.Binding("text").makeTwoWay())
                    ),
                    // four named ports, one on each side:
                    makePort("T", go.Spot.Top, go.Spot.TopSide, false, true),
                    makePort("L", go.Spot.Left, go.Spot.LeftSide, true, true),
                    makePort("R", go.Spot.Right, go.Spot.RightSide, true, true),
                    makePort("B", go.Spot.Bottom, go.Spot.BottomSide, true, false)
                ));

            myDiagram.nodeTemplateMap.add("Conditional",
                $(go.Node, "Table", nodeStyle(),
                    // the main object is a Panel that surrounds a TextBlock with a rectangular Shape
                    $(go.Panel, "Auto",
                        $(go.Shape, "Diamond",
                            { fill: "#282c34", stroke: "#00A9C9", strokeWidth: 3 },
                            new go.Binding("figure", "figure")),
                        $(go.TextBlock, textStyle(),
                            {
                                margin: 8,
                                maxSize: new go.Size(160, NaN),
                                wrap: go.TextBlock.WrapFit,
                                editable: true
                            },
                            new go.Binding("text").makeTwoWay())
                    ),
                    // four named ports, one on each side:
                    makePort("T", go.Spot.Top, go.Spot.Top, false, true),
                    makePort("L", go.Spot.Left, go.Spot.Left, true, true),
                    makePort("R", go.Spot.Right, go.Spot.Right, true, true),
                    makePort("B", go.Spot.Bottom, go.Spot.Bottom, true, false)
                ));

            myDiagram.nodeTemplateMap.add("Start",
                $(go.Node, "Table", nodeStyle(),
                    $(go.Panel, "Spot",
                        $(go.Shape, "Circle",
                            { desiredSize: new go.Size(70, 70), fill: "#282c34", stroke: "#09d3ac", strokeWidth: 3.5 }),
                        $(go.TextBlock, "Start", textStyle(),
                            new go.Binding("text"))
                    ),
                    // three named ports, one on each side except the top, all output only:
                    makePort("L", go.Spot.Left, go.Spot.Left, true, false),
                    makePort("R", go.Spot.Right, go.Spot.Right, true, false),
                    makePort("B", go.Spot.Bottom, go.Spot.Bottom, true, false)
                ));

            myDiagram.nodeTemplateMap.add("End",
                $(go.Node, "Table", nodeStyle(),
                    $(go.Panel, "Spot",
                        $(go.Shape, "Circle",
                            { desiredSize: new go.Size(60, 60), fill: "#282c34", stroke: "#DC3C00", strokeWidth: 3.5 }),
                        $(go.TextBlock, "End", textStyle(),
                            new go.Binding("text"))
                    ),
                    // three named ports, one on each side except the bottom, all input only:
                    makePort("T", go.Spot.Top, go.Spot.Top, false, true),
                    makePort("L", go.Spot.Left, go.Spot.Left, false, true),
                    makePort("R", go.Spot.Right, go.Spot.Right, false, true)
                ));

            // taken from https://unpkg.com/gojs@2.3.8/extensions/Figures.js:
            go.Shape.defineFigureGenerator("File", (shape, w, h) => {
                var geo = new go.Geometry();
                var fig = new go.PathFigure(0, 0, true); // starting point
                geo.add(fig);
                fig.add(new go.PathSegment(go.PathSegment.Line, .75 * w, 0));
                fig.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));
                fig.add(new go.PathSegment(go.PathSegment.Line, w, h));
                fig.add(new go.PathSegment(go.PathSegment.Line, 0, h).close());
                var fig2 = new go.PathFigure(.75 * w, 0, false);
                geo.add(fig2);
                // The Fold
                fig2.add(new go.PathSegment(go.PathSegment.Line, .75 * w, .25 * h));
                fig2.add(new go.PathSegment(go.PathSegment.Line, w, .25 * h));
                geo.spot1 = new go.Spot(0, .25);
                geo.spot2 = go.Spot.BottomRight;
                return geo;
            });

            myDiagram.nodeTemplateMap.add("Comment",
                $(go.Node, "Auto", nodeStyle(),
                    $(go.Shape, "File",
                        { fill: "#282c34", stroke: "#DEE0A3", strokeWidth: 3 }),
                    $(go.TextBlock, textStyle(),
                        {
                            margin: 8,
                            maxSize: new go.Size(200, NaN),
                            wrap: go.TextBlock.WrapFit,
                            textAlign: "center",
                            editable: true
                        },
                        new go.Binding("text").makeTwoWay())
                    // no ports, because no links are allowed to connect with a comment
                ));


            // replace the default Link template in the linkTemplateMap
            myDiagram.linkTemplate =
                $(go.Link,  // the whole link panel
                    {
                        routing: go.Link.AvoidsNodes,
                        curve: go.Link.JumpOver,
                        corner: 5, toShortLength: 4,
                        relinkableFrom: true,
                        relinkableTo: true,
                        reshapable: true,
                        resegmentable: true,
                        // mouse-overs subtly highlight links:
                        mouseEnter: (e, link) => link.findObject("HIGHLIGHT").stroke = "rgba(30,144,255,0.2)",
                        mouseLeave: (e, link) => link.findObject("HIGHLIGHT").stroke = "transparent",
                        selectionAdorned: false
                    },
                    new go.Binding("points").makeTwoWay(),
                    $(go.Shape,  // the highlight shape, normally transparent
                        { isPanelMain: true, strokeWidth: 8, stroke: "transparent", name: "HIGHLIGHT" }),
                    $(go.Shape,  // the link path shape
                        { isPanelMain: true, stroke: "gray", strokeWidth: 2 },
                        new go.Binding("stroke", "isSelected", sel => sel ? "dodgerblue" : "gray").ofObject()),
                    $(go.Shape,  // the arrowhead
                        { toArrow: "standard", strokeWidth: 0, fill: "gray" }),
                    $(go.Panel, "Auto",  // the link label, normally not visible
                        { visible: false, name: "LABEL", segmentIndex: 2, segmentFraction: 0.5 },
                        new go.Binding("visible", "visible").makeTwoWay(),
                        $(go.Shape, "RoundedRectangle",  // the label shape
                            { fill: "#F8F8F8", strokeWidth: 0 }),
                        $(go.TextBlock, "Yes",  // the label
                            {
                                textAlign: "center",
                                font: "10pt helvetica, arial, sans-serif",
                                stroke: "#333333",
                                editable: true
                            },
                            new go.Binding("text").makeTwoWay())
                    )
                );

            // Make link labels visible if coming out of a "conditional" node.
            // This listener is called by the "LinkDrawn" and "LinkRelinked" DiagramEvents.
            function showLinkLabel(e) {
                var label = e.subject.findObject("LABEL");
                if (label !== null) label.visible = (e.subject.fromNode.data.category === "Conditional");
            }

            // temporary links used by LinkingTool and RelinkingTool are also orthogonal:
            myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;
            myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;

            myDiagram.isEnabled = false; //disable edit diagram
            load();  // load an initial diagram from some JSON text

           



            // This is a re-implementation of the default animation, except it fades in from downwards, instead of upwards.
            function animateFadeDown(e) {
                var diagram = e.diagram;
                var animation = new go.Animation();
                animation.isViewportUnconstrained = true; // So Diagram positioning rules let the animation start off-screen
                animation.easing = go.Animation.EaseOutExpo;
                animation.duration = 900;
                // Fade "down", in other words, fade in from above
                animation.add(diagram, 'position', diagram.position.copy().offset(0, 200), diagram.position);
                animation.add(diagram, 'opacity', 0, 1);
                animation.start();
            }

        } // end init


        // Show the diagram's model in JSON format that the user may edit
        //function save() {
        //    document.getElementById("mySavedModel").value = myDiagram.model.toJson();
        //    myDiagram.isModified = false;
        //}
        var data = {
            "class": "go.GraphLinksModel",
            "linkFromPortIdProperty": "fromPort",
            "linkToPortIdProperty": "toPort",
            "nodeDataArray": [
                { "text": "Chemical Treatment", "key": -2, "loc": "-5.249534606933594 152.875" },
                { "text": "Wastewater", "key": -3, "loc": "-5 52.625" },
                { "text": "Chemical Treatment", "key": -4, "loc": "-5 238.625" },
                { "text": "IEAT\n(control Ruality)", "key": -5, "loc": "-222 153.625" },
                { "text": "Supplier\n(Chemical)", "key": -6, "loc": "175 152.625" }
            ],
            "linkDataArray": [
                { "from": -3, "to": -2, "fromPort": "B", "toPort": "T", "points": [-5, 69.64616470336915, -5, 79.64616470336915, -5, 102.75, -5.249534606933594, 102.75, -5.249534606933594, 125.85383529663085, -5.249534606933594, 135.85383529663085] },
                { "from": -2, "to": -4, "fromPort": "B", "toPort": "T", "points": [-5.249534606933594, 169.89616470336912, -5.249534606933594, 179.89616470336912, -5.249534606933594, 195.75, -5, 195.75, -5, 211.60383529663085, -5, 221.60383529663085] },
                { "from": -6, "to": -2, "fromPort": "L", "toPort": "R", "points": [129.25552368164062, 152.625, 119.25552368164062, 152.625, 100.58340454101562, 152.625, 100.58340454101562, 152.875, 81.91128540039062, 152.875, 71.91128540039062, 152.875] },
                { "from": -5, "to": -2, "fromPort": "R", "toPort": "L", "points": [-157.78396606445312, 153.625, -147.78396606445312, 153.625, -120.09716033935547, 153.625, -120.09716033935547, 152.875, -92.41035461425781, 152.875, -82.41035461425781, 152.875] }
            ]

        }
        function load() {
            myDiagram.model = go.Model.fromJson(data);
        }

       
        window.addEventListener('DOMContentLoaded', init);
    </script>
}